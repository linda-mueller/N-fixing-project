filter(status=="native")%>%
filter(landtype=="oceanic")%>%
mutate(area = as.vector(log10((area)+.01)))%>%  #log10 transformation of area for models only
drop_na()%>%
mutate_at(c("abs.lat","area","dist","elev_range","precipitation", "temperature"), scale)  #scale all explanatory variables
#create data subset for presence analysis
oceanic.pres.ntv <- gdat.isl.ntv%>%
filter(!entity_ID == "594")# one data point removed due to extreme residual outlier status (see below)
# Load the necessary libraries
library(dplyr);library(segmented);library(nlme);library(mgcv);library(gridExtra);library(betareg);
library(MASS);library(lme4);library(lmerTest);library(lsmeans);library(ggeffects);library(spdep);
library(ggplot2);library(effects);library(ncf);library(ape);library(sjPlot);library(MuMIn);
library(tidyverse);library(car); library(V8); library(DHARMa); library(broom);library(grateful)
source("extra_functions.R") #load script with additional functions
options(na.action = "na.fail") #Change na. action
#Load dataset from data cleaning script
gdat.ref <- readRDS("data/fulldata_for_analysis_2024.rds") %>%
dplyr::select(c("entity_ID","entity_class","nfix","nfixno", "latitude","abs.lat","longitude", # Select columns
"landtype","status","presence","area","elev_range","precipitation","dist", "temperature","urbanland"))
#dataset for broad presence model including mainlands
gdat.ml.pres <- gdat.ref %>%
dplyr::select(c("entity_ID","nfix","nfixno", "latitude","abs.lat","longitude", # Select columns
"landtype","status","presence","area","elev_range","precipitation","temperature"))%>%
filter(!landtype=="other_island")%>%                                          #remove islands with undetermined type
mutate(area = as.vector(log10((area)+.01)))%>%                                #log transform area
drop_na()%>%
mutate_at(c("abs.lat","area","elev_range","precipitation", "temperature"), scale) #scale all explanatory variables
#check correlations
dat <- gdat.ml.pres
#### M1 Broad Presence (across islands and mainlands including native and naturalized floras)
broad.pres.model.full<- glm(presence~landtype*status+abs.lat+area+elev_range+precipitation+temperature, data =gdat.ml.pres, family= binomial(link ="logit"))
summary(broad.pres.model.full)
#model including spatial correlation variable
rac <- Spat.cor.rep(broad.pres.model.full,gdat.ml.pres,2000)
broad.pres.model.rac.full <- glm(presence~landtype*status+abs.lat+area+elev_range+precipitation+temperature+rac, data = gdat.ml.pres, family = binomial(link ="logit")) #has to be exactly the same as the model but with +rac
summary(broad.pres.model.rac.full)
#M1 with only selected variables after stepwise regression
broad.pres.model<- glm(presence~landtype*status+area+elev_range+precipitation+temperature, data =gdat.ml.pres, family= binomial(link ="logit"))
summary(broad.pres.model)
#Correlogram to test distance of spatial autocorrelation
correlogram(broad.pres.model, gdat.ml.pres, "figures/M1_broadpres_correlogram.jpg")
#model including spatial correlation variable
rac <- Spat.cor.rep(broad.pres.model,gdat.ml.pres,2000)
broad.pres.model.rac <- glm(presence~landtype*status+area+elev_range+precipitation+temperature+rac, data = gdat.ml.pres, family = binomial(link ="logit")) #has to be exactly the same as the model but with +rac
summary(broad.pres.model.rac)
#add rac variable to dataframe to include in lsmeans
gdat.ml.pres$rac <- rac
#add rac variable to dataframe to include in lsmeans
gdat.ml.pres$rac <- rac
ref.land.stat.rac<-lsmeans(broad.pres.model.rac,pairwise~landtype*status, data = gdat.ml.pres, type="response")
ref.table.land.stat.rac<-as.data.frame(ref.land.stat.rac$lsmeans)
#check variance inflation factor (should be below 5 for all variables)
vif(broad.pres.model.rac)
#check model assumptions
simulationOutput <- simulateResiduals(fittedModel = broad.pres.model.rac, plot = F)
#access residuals:
residuals(simulationOutput)
#qqplot
plotQQunif(simulationOutput)
#residuals
plotResiduals(simulationOutput)
#overdispersion
testDispersion(simulationOutput)
#zero inflation
testZeroInflation(simulationOutput)
#contrasts
means <- emmeans(broad.pres.model.rac, ~landtype*status)
#look at means order to determine how to write contrasts:
means
#write contrasts:
contrasts <- list("mainland v all islands native" = c(-2,1,1,0,0,0),
"mainland v nonoceanic islands native" = c(-1,1,0,0,0,0),
"mainland v oceanic islands native" = c(-1,0,1,0,0,0),
"nonoceanic v oceanic islands native" = c(0,-1,1,0,0,0),
"mainland v all islands naturalized" = c(0,0,0,-2,1,1),
"mainland v oceanic islands naturalized" = c(0,0,0,-1,0,1),
"mainland v nonoceanic islands naturalized" = c(0,0,0,-1,1,0),
"nonoceanic v oceanic islands naturalized" = c(0,0,0,0,-1,1),
# is first contrast different native v non-native?
"mainland v all islands * status" = c(-2,1,1,2,-1,-1),
"mainland v oceanic islands * status" = c(-1,0,1,1,0,-1),
"mainland v nonoceanic islands * status" =  c(-1,1,0,1,-1,0),
"nonoceanic v oceanic island * status" = c(0,-1,1,0,1,-1),
"native v naturalized only on mainlands" =  c(-1,0,0,1,0,0),
"native v naturalized only on oceanic islands" =  c(0,0,-1,0,0,1),
"native v naturalized only on nonoceanic islands" =  c(0,-1,0,0,1,0),
"native v naturalized on both island types" =  c(0,-1,-1,0,1,1)
)
#extract results to df:
results <- lsmeans::contrast(means,contrasts)
results.df <- as.data.frame(results)
results.df
#dataset for M2 broad proportion model including mainlands
gdat.ml.prop <- gdat.ref %>%
dplyr::select(c("entity_ID","nfix","nfixno", "latitude","abs.lat","longitude", # Select columns
"landtype","status","presence","area","elev_range","precipitation", "temperature"))%>%
filter(!landtype=="other_island")%>%                                          #remove islands with undetermined type
mutate(area = as.vector(log10((area)+.01)))%>%                                #log transform area
mutate(species = nfix + nfixno) %>%   #find out rows that have no species counts
filter(species > 0) %>%   #filter our rows that have no species counts
drop_na() %>%
mutate_at(c("abs.lat","area","elev_range","precipitation","temperature"), scale) %>%  #scale all explanatory variables
filter(precipitation < 3.5)   #remove outliers
#### M2 Model Broad Proportion across islands and mainlands including native and naturalized flora
broad.prop.model<- glm(cbind(nfix,nfixno)~landtype*status+abs.lat+area+elev_range+precipitation+temperature, data =gdat.ml.prop, family= binomial(link ="logit"))
summary(broad.prop.model)
#model including spatial correlation variable (rac)
rac <- Spat.cor.rep(broad.prop.model,gdat.ml.prop,2000)
broad.prop.model.rac <- glm(cbind(nfix,nfixno)~landtype*status+abs.lat+area+elev_range+precipitation+temperature+rac, data = gdat.ml.prop, family = binomial(link ="logit")) #has to be exactly the same as the model but with +rac
summary(broad.prop.model.rac)
#M2 with only selected variables after stepwise regression because vif value of abs.lat is too high
broad.prop.model<- glm(cbind(nfix,nfixno)~landtype*status+area+elev_range+precipitation+temperature, data =gdat.ml.prop, family= binomial(link ="logit"))
summary(broad.prop.model)
#Correlogram to test distance of spatial autocorrelation
correlogram(broad.prop.model, gdat.ml.prop, "figures/M2_broadprop_correlogram.jpg")
#M2 including spatial correlation variable (rac)
rac <- Spat.cor.rep(broad.prop.model,gdat.ml.prop,2000)
broad.prop.model.rac <- glm(cbind(nfix,nfixno)~landtype*status+area+elev_range+precipitation+temperature+rac, data = gdat.ml.prop, family = binomial(link ="logit"))
summary(broad.prop.model.rac)
#add rac to df to include in lsmeans.
gdat.ml.prop$rac <- rac
ref.land.stat.rac<-lsmeans(broad.prop.model.rac,pairwise~landtype*status, data = gdat.ml.prop, type="response")
ref.table.land.stat.rac<-as.data.frame(ref.land.stat.rac$lsmeans)
#check variance inflation factor (should be below 5 for all variables)
vif(broad.prop.model.rac)
#check model assumptions
simulationOutput <- simulateResiduals(fittedModel = broad.prop.model.rac, plot = F)
#access residuals:
residuals(simulationOutput)
#qqplot
plotQQunif(simulationOutput)
#residuals
plotResiduals(simulationOutput)
#overdispersion
testDispersion(simulationOutput)
#zero inflation
testZeroInflation(simulationOutput)
#check residuals for each variable separately
E2 <- resid(broad.prop.model.rac, type = "pearson")
#list of variables landtype, status, area, elev_range, precipitation, temperature
plot(E2 ~ precipitation, data = gdat.ml.prop)
plot(E2 ~ area, data = gdat.ml.prop)
plot(E2 ~ temperature, data = gdat.ml.prop)
plot(E2 ~ elev_range, data = gdat.ml.prop)
# try variables NOT in model:
plot(E2 ~ abs.lat, data = gdat.ml.prop)
#contrasts
means <- emmeans(broad.prop.model.rac, ~landtype*status)
#look at means order to determine how to write contrasts:
means
#write contrasts:
contrasts <- list("mainland v all islands native" = c(-2,1,1,0,0,0),
"mainland v nonoceanic islands native" = c(-1,1,0,0,0,0),
"mainland v oceanic islands native" = c(-1,0,1,0,0,0),
"nonoceanic v oceanic islands native" = c(0,-1,1,0,0,0),
"mainland v all islands naturalized" = c(0,0,0,-2,1,1),
"mainland v oceanic islands naturalized" = c(0,0,0,-1,0,1),
"mainland v nonoceanic islands naturalized" = c(0,0,0,-1,1,0),
"nonoceanic v oceanic islands naturalized" = c(0,0,0,0,-1,1),
# is first contrast different native v non-native?
"mainland v all islands * status" = c(-2,1,1,2,-1,-1),
"mainland v oceanic islands * status" = c(-1,0,1,1,0,-1),
"mainland v nonoceanic islands * status" =  c(-1,1,0,1,-1,0),
"nonoceanic v oceanic island * status" = c(0,-1,1,0,1,-1),
"native v naturalized only on mainlands" =  c(-1,0,0,1,0,0),
"native v naturalized only on oceanic islands" =  c(0,0,-1,0,0,1),
"native v naturalized only on nonoceanic islands" =  c(0,-1,0,0,1,0),
"native v naturalized on both island types" =  c(0,-1,-1,0,1,1)
)
#extract results to df:
results <- lsmeans::contrast(means,contrasts)
results.df <- as.data.frame(results)
results.df
#Load dataset and subset to only naturalized species and oceanic islands
gdat.isl.ntz <- gdat.ref %>%
dplyr::select(c("entity_ID","entity_class","nfix","nfixno", "latitude","abs.lat","longitude", # Select columns
"landtype","status","presence","area","dist","elev_range","precipitation", "temperature","urbanland"))%>%
filter(status=="naturalized")%>%
filter(landtype=="oceanic")%>%
mutate(area = as.vector(log10((area)+.01)))%>%  #log10 transformation of area
drop_na()%>%
mutate_at(c("abs.lat","area","dist","elev_range","precipitation", "temperature","urbanland"), scale)#%>%  #scale all explanatory variables
####M3 Presence of naturalized N-fixing species on oceanic islands####
model.oc.pres.full<- glm(presence~abs.lat +elev_range	+precipitation+temperature	+area*dist +urbanland*dist, data=gdat.isl.ntz, family=binomial(link ="logit"))
summary(model.oc.pres.full)
#model including spatial correlation variable (rac)
rac <- Spat.cor.rep(model.oc.pres.full,gdat.isl.ntz,2000)
model.oc.pres.rac.full <- glm(presence~abs.lat +elev_range+precipitation+ temperature+area*dist +urbanland*dist+rac, data = gdat.isl.ntz, family = binomial(link ="logit")) #has to be exactly the same as the model but with +rac
summary(model.oc.pres.rac.full)
#model with selected variables after stepwise regression
model.oc.pres<- glm(presence~abs.lat+area+dist+area:dist, data=gdat.isl.ntz, family=binomial(link ="logit"))
summary(model.oc.pres)
#Correlogram to test distance of spatial autocorrelation
correlogram(model.oc.pres, gdat.isl.ntz, "figures/M3_ntzocpres_correlogram.jpg")
#model including spatial correlation variable (rac)
rac <- Spat.cor.rep(model.oc.pres,gdat.isl.ntz,2000)
model.oc.pres.rac<- glm(presence~ abs.lat+area+dist+area:dist+rac, data = gdat.isl.ntz, family = binomial(link ="logit")) #has to be exactly the same as the model but with +rac
summary(model.oc.pres.rac)
summary(model.oc.pres.rac)
#tidy and convert the model output into a df for estimates plot
coef_dataM3 <- tidy(model.oc.pres.rac, conf.int = TRUE)
#check variance inflation factor
vif(model.oc.pres.rac)
#check model assumptions
simulationOutput <- simulateResiduals(fittedModel = model.oc.pres.rac, plot = F)
#access residuals:
residuals(simulationOutput)
#qqplot
plotQQunif(simulationOutput)
#residuals
plotResiduals(simulationOutput)
#overdispersion
testDispersion(simulationOutput)
#zero inflation
testZeroInflation(simulationOutput)
#check residuals for each variable separately
E2 <- resid(model.oc.pres.rac, type = "pearson")
#load data and filter out all locations without species counts
oceanic.prop<-gdat.isl.ntz%>%
mutate(species = nfix + nfixno)%>%
filter(species >0)%>%
filter(precipitation< 4) #take out outlier (only do this in scaled version for modelling, remove when creating figures)
#####M4  naturalized proportion on oceanic islands
model.oc.prop.full<- glm(cbind(nfix,nfixno)~abs.lat +area +dist +elev_range	+precipitation+temperature +urbanland	+area:dist +urbanland:dist, data=oceanic.prop, family=binomial(link ="logit"))
summary(model.oc.prop.full)
#model including spatial correlation variable
rac <- Spat.cor.rep(model.oc.prop.full,oceanic.prop,2000)
model.oc.prop.rac.full <- glm(cbind(nfix,nfixno)~abs.lat +area +dist +elev_range+precipitation+temperature +urbanland	+area:dist +urbanland:dist+rac, data = oceanic.prop, family = binomial(link ="logit"))
summary(model.oc.prop.rac.full)
#M4 with only selected variables after stepwise regression
model.oc.prop<- glm(cbind(nfix,nfixno)~abs.lat +area +dist, data=oceanic.prop, family=binomial(link ="logit"))
summary(model.oc.prop)
#Correlogram to test distance of spatial autocorrelation
correlogram(model.oc.prop, oceanic.prop, "figures/M4_ntzocprop_correlogram.jpg")
#model including spatial correlation variable (rac)
rac <- Spat.cor.rep(model.oc.prop,oceanic.prop,2000)
model.oc.prop.rac <- glm(cbind(nfix,nfixno)~abs.lat +area +dist+rac, data = oceanic.prop, family = binomial(link ="logit"))
summary(model.oc.prop.rac)
# tidy and convert the model output into a df for estimates plot
coef_dataM4 <- tidy(model.oc.prop.rac, conf.int = TRUE)
#check variance inflation factor (should be below 5 for all variables)
vif(model.oc.prop.rac)
#check model assumptions
simulationOutput <- simulateResiduals(fittedModel = model.oc.prop.rac, plot = F)
#access residuals:
residuals(simulationOutput)
#qqplot
plotQQunif(simulationOutput)
#residuals
plotResiduals(simulationOutput)
#overdispersion
testDispersion(simulationOutput)
#zero inflation
testZeroInflation(simulationOutput)
#check for overdispersion
disp_check(model.oc.prop.rac, oceanic.prop)
#Load dataset and subset to only native species and oceanic islands
gdat.isl.ntv <- gdat.ref %>%
dplyr::select(c("entity_ID","entity_class","nfix","nfixno", "latitude","abs.lat","longitude", # Select columns
"landtype","status","presence","area","dist","elev_range","precipitation", "temperature"))%>%
filter(status=="native")%>%
filter(landtype=="oceanic")%>%
mutate(area = as.vector(log10((area)+.01)))%>%  #log10 transformation of area for models only
drop_na()%>%
mutate_at(c("abs.lat","area","dist","elev_range","precipitation", "temperature"), scale)  #scale all explanatory variables
#create data subset for presence analysis
oceanic.pres.ntv <- gdat.isl.ntv%>%
filter(!entity_ID == "594")# one data point removed due to extreme residual outlier status (see below)
#M5 native presence on oceanic islands
model.oc.pres.full <- glm(presence~abs.lat + area + dist +elev_range +precipitation+temperature +area:dist , data=oceanic.pres.ntv, family=binomial(link ="logit"))
summary(model.oc.pres.full)
#model including spatial correlation variable (rac)
rac <- Spat.cor.rep(model.oc.pres.full,oceanic.pres.ntv,2000)
model.oc.pres.rac.full <- glm(presence~abs.lat + area + dist +elev_range +precipitation+temperature +area:dist +rac, data = oceanic.pres.ntv, family = binomial(link ="logit"))
summary(model.oc.pres.rac.full)
#M5 with only selected variables after stepwise regression
model.oc.pres <- glm(presence~ area + dist +precipitation+temperature , data=oceanic.pres.ntv, family=binomial(link ="logit"))
summary(model.oc.pres)
#Correlogram to test distance of spatial autocorrelation
correlogram(model.oc.pres, oceanic.pres.ntv, "figures/M5_ntvocpres_correlogram.jpg")
#model including spatial correlation variable (rac)
rac <- Spat.cor.rep(model.oc.pres,oceanic.pres.ntv,2000)
model.oc.pres.rac <- glm(presence~ area + dist +precipitation+temperature +rac, data = oceanic.pres.ntv, family = binomial(link ="logit"))
summary(model.oc.pres.rac)
# tidy and convert the model output into a df for estimates plot
coef_dataM5 <- tidy(model.oc.pres.rac, conf.int = TRUE)
#create data subset for presence analysis
oceanic.pres.ntv <- gdat.isl.ntv%>%
filter(!entity_ID == "594")# one data point removed due to extreme residual outlier status (see below)
#M5 native presence on oceanic islands
model.oc.pres.full <- glm(presence~abs.lat + area + dist +elev_range +precipitation+temperature +area:dist , data=oceanic.pres.ntv, family=binomial(link ="logit"))
summary(model.oc.pres.full)
#model including spatial correlation variable (rac)
rac <- Spat.cor.rep(model.oc.pres.full,oceanic.pres.ntv,2000)
model.oc.pres.rac.full <- glm(presence~abs.lat + area + dist +elev_range +precipitation+temperature +area:dist +rac, data = oceanic.pres.ntv, family = binomial(link ="logit"))
summary(model.oc.pres.rac.full)
#M5 with only selected variables after stepwise regression
model.oc.pres <- glm(presence~ area + dist +precipitation+temperature , data=oceanic.pres.ntv, family=binomial(link ="logit"))
summary(model.oc.pres)
#Correlogram to test distance of spatial autocorrelation
correlogram(model.oc.pres, oceanic.pres.ntv, "figures/M5_ntvocpres_correlogram.jpg")
#model including spatial correlation variable (rac)
rac <- Spat.cor.rep(model.oc.pres,oceanic.pres.ntv,2000)
model.oc.pres.rac <- glm(presence~ area + dist +precipitation+temperature +rac, data = oceanic.pres.ntv, family = binomial(link ="logit"))
summary(model.oc.pres.rac)
#Load dataset and subset to only native species and oceanic islands
gdat.isl.ntv <- gdat.ref %>%
dplyr::select(c("entity_ID","entity_class","nfix","nfixno", "latitude","abs.lat","longitude", # Select columns
"landtype","status","presence","area","dist","elev_range","precipitation", "temperature"))%>%
filter(status=="native")%>%
filter(landtype=="oceanic")%>%
mutate(area = as.vector(log10((area)+.01)))%>%  #log10 transformation of area for models only
drop_na()%>%
mutate_at(c("abs.lat","area","dist","elev_range","precipitation", "temperature"), scale)  #scale all explanatory variables
#create data subset for presence analysis
oceanic.pres.ntv <- gdat.isl.ntv%>%
filter(!entity_ID == "594")# one data point removed due to extreme residual outlier status (see below)
#check correlations
dat <- oceanic.pres.ntv
names(oceanic.pres.ntv)
cont.var <- c("abs.lat", "area","elev_range","precipitation","temperature","dist")
Mypairs(dat[,cont.var]) # area and elevation range 0.73, abs.lat and temperature -0.89
warnings()
#M5 native presence on oceanic islands
model.oc.pres.full <- glm(presence~abs.lat + area + dist +elev_range +precipitation+temperature +area:dist , data=oceanic.pres.ntv, family=binomial(link ="logit"))
summary(model.oc.pres.full)
#model including spatial correlation variable (rac)
rac <- Spat.cor.rep(model.oc.pres.full,oceanic.pres.ntv,2000)
model.oc.pres.rac.full <- glm(presence~abs.lat + area + dist +elev_range +precipitation+temperature +area:dist +rac, data = oceanic.pres.ntv, family = binomial(link ="logit"))
summary(model.oc.pres.rac.full)
#M5 with only selected variables after stepwise regression
model.oc.pres <- glm(presence~ area + dist +precipitation+temperature , data=oceanic.pres.ntv, family=binomial(link ="logit"))
summary(model.oc.pres)
#Correlogram to test distance of spatial autocorrelation
correlogram(model.oc.pres, oceanic.pres.ntv, "figures/M5_ntvocpres_correlogram.jpg")
#model including spatial correlation variable (rac)
rac <- Spat.cor.rep(model.oc.pres,oceanic.pres.ntv,2000)
model.oc.pres.rac <- glm(presence~ area + dist +precipitation+temperature +rac, data = oceanic.pres.ntv, family = binomial(link ="logit"))
summary(model.oc.pres.rac)
#check variance inflation factor (should be below 5 for all variables)
vif(model.oc.pres.rac)
#check model assumptions
simulationOutput <- simulateResiduals(fittedModel = model.oc.pres.rac, plot = F)
#access residuals:
residuals(simulationOutput)
#qqplot
plotQQunif(simulationOutput)
#residuals
plotResiduals(simulationOutput)
#overdispersion
testDispersion(simulationOutput)
#zero inflation
testZeroInflation(simulationOutput)
#check residuals for each variable separately
E2 <- resid(model.oc.pres.rac, type = "pearson")
#subset data for proportion analysis
oceanic.prop.ntv <- gdat.isl.ntv%>%
#remove outliers
filter(!entity_ID == 675) %>%
filter(!entity_ID == 921) %>%
filter(!entity_ID == 11474)%>%
mutate(species = nfix + nfixno)%>% #find out values that have no species counts
filter(species > 0)%>% #filter out values that have no species counts
filter(precipitation<4)
#####M6 Model proportion of native N-fixing species on oceanic islands
model.oc.prop.full<- glm(cbind(nfix,nfixno)~abs.lat+area +dist +elev_range+precipitation +temperature+ area:dist, data=oceanic.prop.ntv, family=binomial(link ="logit"))
summary(model.oc.prop.full)
#model including spatial correlation variable (rac)
rac <- Spat.cor.rep(model.oc.prop.full,oceanic.prop.ntv,2000)
model.oc.prop.rac.full <- glm(cbind(nfix,nfixno)~abs.lat +area +dist+elev_range +precipitation+temperature + area:dist+rac, data = oceanic.prop.ntv, family = binomial(link ="logit")) #has to be exactly the same as the model but with +rac
summary(model.oc.prop.rac.full)
#selected variables
model.oc.prop<- glm(cbind(nfix,nfixno)~abs.lat+area +dist+precipitation +temperature+ area:dist, data=oceanic.prop.ntv, family=binomial(link ="logit"))
summary(model.oc.prop)
#Correlogram to test distance of spatial autocorrelation
correlogram(model.oc.prop, oceanic.prop.ntv, "figures/M6_ntvocprop_correlogram.jpg")
#model including spatial correlation variable (rac)
rac <- Spat.cor.rep(model.oc.prop,oceanic.prop.ntv,2000)
model.oc.prop.rac <- glm(cbind(nfix,nfixno)~abs.lat +area +dist+precipitation+temperature + area:dist+rac, data = oceanic.prop.ntv, family = binomial(link ="logit")) #has to be exactly the same as the model but with +rac
summary(model.oc.prop.rac)
#tidy and convert the model output into a df for estimates plot
coef_dataM6 <- tidy(model.oc.prop.rac, conf.int = TRUE)
#check variance inflation factor (should be below 5 for all variables)
vif(model.oc.prop.rac)
#check model assumptions
simulationOutput <- simulateResiduals(fittedModel = model.oc.prop.rac.full, plot = F)
#access residuals:
residuals(simulationOutput)
#qqplot
plotQQunif(simulationOutput)
#residuals
plotResiduals(simulationOutput)
#overdispersion
testDispersion(simulationOutput)
#zero inflation
testZeroInflation(simulationOutput)
#check model assumptions
simulationOutput <- simulateResiduals(fittedModel = model.oc.prop.rac, plot = F)
#access residuals:
residuals(simulationOutput)
#qqplot
plotQQunif(simulationOutput)
#residuals
plotResiduals(simulationOutput)
#overdispersion
testDispersion(simulationOutput)
#zero inflation
testZeroInflation(simulationOutput)
#qqplot
plotQQunif(simulationOutput)
#residuals
plotResiduals(simulationOutput)
#overdispersion
testDispersion(simulationOutput)
#zero inflation
testZeroInflation(simulationOutput)
#check for overdispersion
disp_check(model.oc.prop.rac, oceanic.prop)
#overdispersion
testDispersion(simulationOutput)
#check variance inflation factor (should be below 5 for all variables)
vif(model.oc.prop.rac)
summary(model.oc.prop.rac)
#selected variables
model.oc.prop<- glm(cbind(nfix,nfixno)~area +dist+precipitation +temperature+ area:dist, data=oceanic.prop.ntv, family=binomial(link ="logit"))
summary(model.oc.prop)
#model including spatial correlation variable (rac)
rac <- Spat.cor.rep(model.oc.prop,oceanic.prop.ntv,2000)
model.oc.prop.rac <- glm(cbind(nfix,nfixno)~area +dist+precipitation+temperature + area:dist+rac, data = oceanic.prop.ntv, family = binomial(link ="logit")) #has to be exactly the same as the model but with +rac
summary(model.oc.prop.rac)
#check variance inflation factor (should be below 5 for all variables)
vif(model.oc.prop.rac)
#check model assumptions
simulationOutput <- simulateResiduals(fittedModel = model.oc.prop.rac, plot = F)
#access residuals:
residuals(simulationOutput)
#qqplot
plotQQunif(simulationOutput)
#residuals
plotResiduals(simulationOutput)
#overdispersion
testDispersion(simulationOutput)
#qqplot
plotQQunif(simulationOutput)
#residuals
plotResiduals(simulationOutput)
#overdispersion
testDispersion(simulationOutput)
#zero inflation
testZeroInflation(simulationOutput)
#check for overdispersion
disp_check(model.oc.prop.rac, oceanic.prop)
#selected variables
model.oc.prop<- glm(cbind(nfix,nfixno)~abs.lat+area +dist+precipitation +temperature, data=oceanic.prop.ntv, family=binomial(link ="logit"))
summary(model.oc.prop)
#model including spatial correlation variable (rac)
rac <- Spat.cor.rep(model.oc.prop,oceanic.prop.ntv,2000)
model.oc.prop.rac <- glm(cbind(nfix,nfixno)~abs.lat+area +dist+precipitation+temperature+rac, data = oceanic.prop.ntv, family = binomial(link ="logit")) #has to be exactly the same as the model but with +rac
summary(model.oc.prop.rac)
#check variance inflation factor (should be below 5 for all variables)
vif(model.oc.prop.rac)
#check model assumptions
simulationOutput <- simulateResiduals(fittedModel = model.oc.prop.rac, plot = F)
#access residuals:
residuals(simulationOutput)
#qqplot
plotQQunif(simulationOutput)
#residuals
plotResiduals(simulationOutput)
#overdispersion
testDispersion(simulationOutput)
#zero inflation
testZeroInflation(simulationOutput)
#check for overdispersion
disp_check(model.oc.prop.rac, oceanic.prop)
#selected variables
model.oc.prop<- glm(cbind(nfix,nfixno)~area +dist+precipitation +temperature, data=oceanic.prop.ntv, family=binomial(link ="logit"))
summary(model.oc.prop)
#selected variables
model.oc.prop<- glm(cbind(nfix,nfixno)~area +dist+precipitation +temperature, data=oceanic.prop.ntv, family=binomial(link ="logit"))
summary(model.oc.prop)
#model including spatial correlation variable (rac)
rac <- Spat.cor.rep(model.oc.prop,oceanic.prop.ntv,2000)
model.oc.prop.rac <- glm(cbind(nfix,nfixno)~area +dist+precipitation+temperature+rac, data = oceanic.prop.ntv, family = binomial(link ="logit")) #has to be exactly the same as the model but with +rac
summary(model.oc.prop.rac)
#check variance inflation factor (should be below 5 for all variables)
vif(model.oc.prop.rac)
#check model assumptions
simulationOutput <- simulateResiduals(fittedModel = model.oc.prop.rac, plot = F)
#access residuals:
residuals(simulationOutput)
#qqplot
plotQQunif(simulationOutput)
#residuals
plotResiduals(simulationOutput)
#overdispersion
testDispersion(simulationOutput)
#zero inflation
testZeroInflation(simulationOutput)
#check for overdispersion
disp_check(model.oc.prop.rac, oceanic.prop)
#selected variables
model.oc.prop<- glm(cbind(nfix,nfixno)~abs.lat+area +dist+precipitation +temperature+ area:dist, data=oceanic.prop.ntv, family=binomial(link ="logit"))
summary(model.oc.prop)
#model including spatial correlation variable (rac)
rac <- Spat.cor.rep(model.oc.prop,oceanic.prop.ntv,2000)
model.oc.prop.rac <- glm(cbind(nfix,nfixno)~abs.lat+area +dist+precipitation+temperature + area:dist+rac, data = oceanic.prop.ntv, family = binomial(link ="logit")) #has to be exactly the same as the model but with +rac
summary(model.oc.prop.rac)
#model including spatial correlation variable (rac)
rac <- Spat.cor.rep(model.oc.prop,oceanic.prop.ntv,2000)
model.oc.prop.rac <- glm(cbind(nfix,nfixno)~abs.lat+area +dist+precipitation+temperature + area:dist+rac, data = oceanic.prop.ntv, family = binomial(link ="logit")) #has to be exactly the same as the model but with +rac
summary(model.oc.prop.rac)
